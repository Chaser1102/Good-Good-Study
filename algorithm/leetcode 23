合并 k 个排序链表，返回合并后的排序链表。请分析和描述算法的复杂度。

示例:

输入:
[
  1->4->5,
  1->3->4,
  2->6
]
输出: 1->1->2->3->4->4->5->6




/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length == 0) return null;
        
        return startMergeKLists(lists, 0, lists.length-1);
    }
    public ListNode startMergeKLists(ListNode[] arr, int left, int right){
        if(right == left) return arr[left];
        
        int mid=(left + right) / 2;
        
        ListNode l1 = startMergeKLists(arr, left, mid);
        ListNode l2 = startMergeKLists(arr, mid+1, right);
        
        return merge(l1, l2);
    }
    public ListNode merge(ListNode node1, ListNode node2){
        ListNode l3 = new ListNode(-1);
        ListNode temp = l3;
        
        while(node1 != null && node2 != null){
            if(node1.val < node2.val){
                temp.next = node1;
                node1 = node1.next;
            }else {
                temp.next = node2;
                node2 = node2.next;
            }
            temp = temp.next;
        }
        temp.next = node1 != null ? node1 : node2;
        return l3.next;
    }
}
